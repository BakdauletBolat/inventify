version: '3'

services:
  web:
    build: .
    command: poetry run gunicorn inventify.wsgi:application --bind 0.0.0.0:8000 --workers=10 --timeout 120
    volumes:
      - static_volume:/usr/src/app/staticfiles
      - media_volume:/usr/src/app/media
    expose:
      - 8000
    env_file:
      - .env
    depends_on:
      - db
#      - db-drf-api-logger
#      - es

  db:
    image: postgres:13.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${SQL_USER}
      POSTGRES_PASSWORD: ${SQL_PASSWORD}
      POSTGRES_DB: ${SQL_DATABASE}
    ports:
      - "5432:5432"

  nginx:
    build: ./docker/prod/nginx/
    volumes:
      - static_volume:/usr/src/app/staticfiles
      - media_volume:/usr/src/app/media
    ports:
      - '8000:80'
    depends_on:
      - web
#  db-drf-api-logger:
#    image: postgres:13.0-alpine
#    volumes:
#      - postgres_data_drf:/var/lib/postgresql/data/
#    env_file:
#      - .env
#    environment:
#      POSTGRES_USER: ${SQL_USER_DRF}
#      POSTGRES_PASSWORD: ${SQL_PASSWORD_DRF}
#      POSTGRES_DB: ${SQL_DATABASE_DRF}
#    ports:
#      - "7432:5432"
#
  redis:
    image: redis:alpine
    ports:
      - '6379:6379'
    depends_on:
      - web

  celery-worker:
    build: ./
    command: poetry run celery -A inventify worker --beat --scheduler django --loglevel=info
    depends_on:
      - redis
      - db
    env_file:
      - .env
    volumes:
      - media_volume:/usr/src/app/media
#  es:
#    image: elasticsearch:7.8.1
#    environment:
#      - discovery.type=single-node
#    ports:
#      - "9200:9200"

volumes:
  postgres_data:
#  postgres_data_drf:
  static_volume:
  media_volume:

#networks:
#  default:
#    ipam:
#      driver: default
#      config:
#        - subnet: 172.44.0.0/16